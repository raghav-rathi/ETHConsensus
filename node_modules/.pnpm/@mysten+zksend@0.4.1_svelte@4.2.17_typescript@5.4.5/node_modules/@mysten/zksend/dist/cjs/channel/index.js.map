{
  "version": 3,
  "sources": ["../../../src/channel/index.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { Output } from 'valibot';\nimport { parse, safeParse } from 'valibot';\n\nimport { withResolvers } from '../utils/withResolvers.js';\nimport type { ZkSendRequestData, ZkSendResponsePayload, ZkSendResponseTypes } from './events.js';\nimport { ZkSendRequest, ZkSendResponse } from './events.js';\n\nexport const DEFAULT_ZKSEND_ORIGIN = 'https://zksend.com';\n\nexport { ZkSendRequest, ZkSendResponse };\n\ninterface ZkSendPopupOptions {\n\torigin?: string;\n\tname: string;\n}\n\nexport class ZkSendPopup {\n\t#id: string;\n\t#origin: string;\n\t#name: string;\n\n\t#close?: () => void;\n\n\tconstructor({ origin = DEFAULT_ZKSEND_ORIGIN, name }: ZkSendPopupOptions) {\n\t\tthis.#id = crypto.randomUUID();\n\t\tthis.#origin = origin;\n\t\tthis.#name = name;\n\t}\n\n\tasync createRequest<T extends ZkSendRequestData>(\n\t\trequest: T,\n\t): Promise<ZkSendResponseTypes[T['type']]> {\n\t\tconst popup = window.open('about:blank', '_blank');\n\n\t\tif (!popup) {\n\t\t\tthrow new Error('Failed to open new window');\n\t\t}\n\n\t\tconst { promise, resolve, reject } = withResolvers<ZkSendResponseTypes[T['type']]>();\n\n\t\tlet interval: NodeJS.Timer | null = null;\n\n\t\tfunction cleanup() {\n\t\t\tif (interval) {\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\t\t\twindow.removeEventListener('message', listener);\n\t\t}\n\n\t\tconst listener = (event: MessageEvent) => {\n\t\t\tif (event.origin !== this.#origin) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst { success, output } = safeParse(ZkSendResponse, event.data);\n\t\t\tif (!success || output.id !== this.#id) return;\n\n\t\t\tcleanup();\n\n\t\t\tif (output.payload.type === 'reject') {\n\t\t\t\treject(new Error('User rejected the request'));\n\t\t\t} else if (output.payload.type === 'resolve') {\n\t\t\t\tresolve(output.payload.data as ZkSendResponseTypes[T['type']]);\n\t\t\t}\n\t\t};\n\n\t\tthis.#close = () => {\n\t\t\tcleanup();\n\t\t\tpopup?.close();\n\t\t};\n\n\t\twindow.addEventListener('message', listener);\n\n\t\tconst { type, ...data } = request;\n\n\t\tpopup?.location.assign(\n\t\t\t`${this.#origin}/dapp/${type}?${new URLSearchParams({\n\t\t\t\tid: this.#id,\n\t\t\t\torigin: window.origin,\n\t\t\t\tname: this.#name,\n\t\t\t})}${data ? `#${new URLSearchParams(data as Record<string, string>)}` : ''}`,\n\t\t);\n\n\t\tinterval = setInterval(() => {\n\t\t\ttry {\n\t\t\t\tif (popup?.closed) {\n\t\t\t\t\tcleanup();\n\t\t\t\t\treject(new Error('User closed the zkSend window'));\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// This can error during the login flow, but that's fine.\n\t\t\t}\n\t\t}, 1000);\n\n\t\treturn promise;\n\t}\n\n\tclose() {\n\t\tthis.#close?.();\n\t}\n}\n\nexport class ZkSendHost {\n\t#request: Output<typeof ZkSendRequest>;\n\n\tconstructor(request: Output<typeof ZkSendRequest>) {\n\t\tif (typeof window === 'undefined' || !window.opener) {\n\t\t\tthrow new Error(\n\t\t\t\t'ZkSendHost can only be used in a window opened through `window.open`. `window.opener` is not available.',\n\t\t\t);\n\t\t}\n\n\t\tthis.#request = request;\n\t}\n\n\tstatic fromUrl(url: string = window.location.href) {\n\t\tconst parsed = new URL(url);\n\n\t\tconst urlHashData = parsed.hash\n\t\t\t? Object.fromEntries(\n\t\t\t\t\t[...new URLSearchParams(parsed.hash.slice(1))].map(([key, value]) => [\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tvalue.replace(/ /g, '+'),\n\t\t\t\t\t]),\n\t\t\t  )\n\t\t\t: {};\n\n\t\tconst request = parse(ZkSendRequest, {\n\t\t\tid: parsed.searchParams.get('id'),\n\t\t\torigin: parsed.searchParams.get('origin'),\n\t\t\tname: parsed.searchParams.get('name'),\n\t\t\tpayload: {\n\t\t\t\ttype: parsed.pathname.split('/').pop(),\n\t\t\t\t...urlHashData,\n\t\t\t},\n\t\t});\n\n\t\treturn new ZkSendHost(request);\n\t}\n\n\tgetRequestData() {\n\t\treturn this.#request;\n\t}\n\n\tsendMessage(payload: ZkSendResponsePayload) {\n\t\twindow.opener.postMessage(\n\t\t\t{\n\t\t\t\tid: this.#request.id,\n\t\t\t\tsource: 'zksend-channel',\n\t\t\t\tpayload,\n\t\t\t} satisfies ZkSendResponse,\n\t\t\tthis.#request.origin,\n\t\t);\n\t}\n\n\tclose(payload?: ZkSendResponsePayload) {\n\t\tif (payload) {\n\t\t\tthis.sendMessage(payload);\n\t\t}\n\t\twindow.close();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
